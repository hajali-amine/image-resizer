name: Image Resizer CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Run tests with Maven
        run: mvn clean test

  build-release:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image and push to Dockerhub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/image-resizer:${{ github.sha }}

  # The EC2 instance is ready and has docker installed
  deploy:
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        with:
          host: ${{ secrets.EC2_HOSTNAME  }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY  }}
          script_stop: true
          envs: AWS_ACCESS_KEY,AWS_SECRET_KEY
          script: |
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/image-resizer:${{ github.sha }}
            sudo docker run -e "AWS_ACCESS_KEY=$AWS_ACCESS_KEY" -e "AWS_SECRET_KEY=$AWS_SECRET_KEY" -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/image-resizer:${{ github.sha }}